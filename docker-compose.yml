
networks:
  media_net:
    driver: bridge

services:
  plex:
    image: linuxserver/plex
    container_name: plex
    networks:
      - media_net
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - VERSION=docker
      - TZ=${TZ}
    devices:
      - "/dev/dri:/dev/dri"
    volumes:
      - ${BASE_DIR}/plex/config:/config
      - ${BASE_DIR}/media/tv:/storage/tv
      - ${BASE_DIR}/media/movies:/storage/movies
      - ${BASE_DIR}/plex/transcode:/transcode
    ports:
      - "${PORT_PLEX}:32400"
      - "${PLEX_UDP_DLNA_PORT}:${PLEX_UDP_DLNA_PORT}/udp"
      - "${PLEX_UDP_BONJOUR_PORT}:${PLEX_UDP_BONJOUR_PORT}/udp"
      - "${PLEX_TCP_ROKU_PORT}:${PLEX_TCP_ROKU_PORT}/tcp"
      - "${PLEX_UDP_GDM_PORT1}:${PLEX_UDP_GDM_PORT1}/udp"
      - "${PLEX_UDP_GDM_PORT2}:${PLEX_UDP_GDM_PORT2}/udp"
      - "${PLEX_UDP_GDM_PORT3}:${PLEX_UDP_GDM_PORT3}/udp"
      - "${PLEX_UDP_GDM_PORT4}:${PLEX_UDP_GDM_PORT4}/udp"
      - "${PLEX_TCP_DLNA_PORT}:${PLEX_TCP_DLNA_PORT}/tcp"
    restart: unless-stopped

  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    networks:
      - media_net
    ports:
      - "${PORT_SONARR}:8989"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${BASE_DIR}/sonarr/config:/config
      - ${BASE_DIR}/media:/storage
      - ${BASE_DIR}/downloads:/downloads
    restart: unless-stopped

  radarr:
    image: linuxserver/radarr
    container_name: radarr
    networks:
      - media_net
    ports:
      - "${PORT_RADARR}:7878"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${BASE_DIR}/radarr/config:/config
      - ${BASE_DIR}/media:/storage
      - ${BASE_DIR}/downloads:/downloads
    restart: unless-stopped

  bazarr:
    image: linuxserver/bazarr
    container_name: bazarr
    networks:
      - media_net
    ports:
      - "${PORT_BAZARR}:6767"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${BASE_DIR}/bazarr/config:/config
      - ${BASE_DIR}/media/tv:/storage/tv
      - ${BASE_DIR}/media/movies:/storage/movies
    restart: unless-stopped

  sabnzbd:
    image: linuxserver/sabnzbd
    container_name: sabnzbd
    networks:
      - media_net
    ports:
      - "${PORT_SABNZBD}:8080"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${BASE_DIR}/sabnzbd/config:/config
      - ${BASE_DIR}/downloads:/downloads
      - ${BASE_DIR}/incomplete:/incomplete
      - ${BASE_DIR}/media:/storage
    restart: unless-stopped

  overseerr:
    image: linuxserver/overseerr
    container_name: overseerr
    networks: 
      - media_net
    ports:
      - "${PORT_OVERSEERR}:5055"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${BASE_DIR}/overseerr/config:/config
    restart: unless-stopped

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    networks:
      - media_net
    environment:
      - TZ=${TZ}
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_REMOVE_VOLUMES=false
      - WATCHTOWER_INCLUDE_STOPPED=false
      - WATCHTOWER_SCHEDULE=0 30 4 * * *
      - WATCHTOWER_NOTIFICATIONS=${WATCHTOWER_NOTIFICATIONS:-}
      - WATCHTOWER_NOTIFICATION_URL=${WATCHTOWER_NOTIFICATION_URL:-}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
    labels:
      - com.centurylinklabs.watchtower.enable=false

  shoutrrr:
    image: containrrr/shoutrrr:latest
    container_name: shoutrrr
    networks:
      - media_net
    environment:
      - TZ=${TZ}
    volumes:
      - ${BASE_DIR}/shoutrrr/config:/config
    restart: unless-stopped
    command: >
      sh -c "
      if [ ! -f /config/config.yaml ]; then
        mkdir -p /config &&
        cat > /config/config.yaml << 'EOF'
      # Shoutrrr configuration
      # Add your notification services here
      # Example configurations:
      
      # Discord:
      # urls:
      #   - discord://token@channel_id
      
      # Slack:
      #   - slack://webhook_url
      
      # Email (SMTP):
      #   - smtp://username:password@host:port/?from=sender@example.com&to=recipient@example.com
      
      # Telegram:
      #   - telegram://token@chat_id
      
      # Gotify:
      #   - gotify://gotify.example.com/token
      
      urls: []
      EOF
      fi &&
      /shoutrrr"
